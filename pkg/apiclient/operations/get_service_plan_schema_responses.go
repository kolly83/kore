// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/appvia/kore/pkg/apiclient/models"
)

// GetServicePlanSchemaReader is a Reader for the GetServicePlanSchema structure.
type GetServicePlanSchemaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetServicePlanSchemaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetServicePlanSchemaOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetServicePlanSchemaUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetServicePlanSchemaForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetServicePlanSchemaNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetServicePlanSchemaInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetServicePlanSchemaOK creates a GetServicePlanSchemaOK with default headers values
func NewGetServicePlanSchemaOK() *GetServicePlanSchemaOK {
	return &GetServicePlanSchemaOK{}
}

/*GetServicePlanSchemaOK handles this case with default header values.

Contains the service schema definition
*/
type GetServicePlanSchemaOK struct {
	Payload models.MapStringInterface
}

func (o *GetServicePlanSchemaOK) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/serviceplans/{name}/schema][%d] getServicePlanSchemaOK  %+v", 200, o.Payload)
}

func (o *GetServicePlanSchemaOK) GetPayload() models.MapStringInterface {
	return o.Payload
}

func (o *GetServicePlanSchemaOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetServicePlanSchemaUnauthorized creates a GetServicePlanSchemaUnauthorized with default headers values
func NewGetServicePlanSchemaUnauthorized() *GetServicePlanSchemaUnauthorized {
	return &GetServicePlanSchemaUnauthorized{}
}

/*GetServicePlanSchemaUnauthorized handles this case with default header values.

If not authenticated
*/
type GetServicePlanSchemaUnauthorized struct {
}

func (o *GetServicePlanSchemaUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/serviceplans/{name}/schema][%d] getServicePlanSchemaUnauthorized ", 401)
}

func (o *GetServicePlanSchemaUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetServicePlanSchemaForbidden creates a GetServicePlanSchemaForbidden with default headers values
func NewGetServicePlanSchemaForbidden() *GetServicePlanSchemaForbidden {
	return &GetServicePlanSchemaForbidden{}
}

/*GetServicePlanSchemaForbidden handles this case with default header values.

If authenticated but not authorized
*/
type GetServicePlanSchemaForbidden struct {
}

func (o *GetServicePlanSchemaForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/serviceplans/{name}/schema][%d] getServicePlanSchemaForbidden ", 403)
}

func (o *GetServicePlanSchemaForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetServicePlanSchemaNotFound creates a GetServicePlanSchemaNotFound with default headers values
func NewGetServicePlanSchemaNotFound() *GetServicePlanSchemaNotFound {
	return &GetServicePlanSchemaNotFound{}
}

/*GetServicePlanSchemaNotFound handles this case with default header values.

the service plan with the given name doesn't exist
*/
type GetServicePlanSchemaNotFound struct {
}

func (o *GetServicePlanSchemaNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/serviceplans/{name}/schema][%d] getServicePlanSchemaNotFound ", 404)
}

func (o *GetServicePlanSchemaNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetServicePlanSchemaInternalServerError creates a GetServicePlanSchemaInternalServerError with default headers values
func NewGetServicePlanSchemaInternalServerError() *GetServicePlanSchemaInternalServerError {
	return &GetServicePlanSchemaInternalServerError{}
}

/*GetServicePlanSchemaInternalServerError handles this case with default header values.

A generic API error containing the cause of the error
*/
type GetServicePlanSchemaInternalServerError struct {
	Payload *models.ApiserverError
}

func (o *GetServicePlanSchemaInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/serviceplans/{name}/schema][%d] getServicePlanSchemaInternalServerError  %+v", 500, o.Payload)
}

func (o *GetServicePlanSchemaInternalServerError) GetPayload() *models.ApiserverError {
	return o.Payload
}

func (o *GetServicePlanSchemaInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ApiserverError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
